require('dotenv').config()
const express = require('express')
const routes = require('./routes')
const { engine } = require('express-handlebars')
const client = require('./db/client')
const session = require('express-session')
const SequelizeStore = require("connect-session-sequelize")(session.Store)
const store = new SequelizeStore({ db: client })


const app = express()
const PORT = process.env.PORT || 3333

// used to parse incoming requests with JSON payloads.
//  When a client sends data to the server with the Content-Type header set to application/json, 
// this middleware parses the JSON data and makes it available in req.body.

app.use(express.json())
app.use(express.urlencoded({ extended: false }))

//  set up the express sessions
app.use(session(
    {
        secret: process.env.SESSION_SECRET,
        store,
        resave: false,
        saveUninitialized: true,
        cookie: { maxAge: 1000000 }
    }
))

// GET route for all files in public
app.use(express.static('public'))

// set up handlebars template engine
app.engine('.hbs', engine({
    extname: '.hbs'
    }));
app.set('view engine', '.hbs')
    

app.use('/', routes)



// parse incoming requests with URL-encoded payloads. generated by HTML forms and sent in the body of a POST request.


// Listen for the port using sequelize
client.sync({force: false})  
.then(() => { 
    app.listen(PORT, ()=> {  
        console.log(`Now listening on port ${PORT}` )  
    })  
}) 







